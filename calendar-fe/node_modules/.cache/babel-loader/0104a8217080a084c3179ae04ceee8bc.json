{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/Education/Projects/calendar-app/calendar-fe/src/components/Register/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport authService from '../../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  'first_name': yup.string().trim().max(150, 'First name cannot be longer than 150 characters.'),\n  'last_name': yup.string().trim().max(150, 'Last name cannot be longer than 150 characters.'),\n  'username': yup.string().required().trim().max(150, 'Username cannot be longer than 150 characters.').matches(/^[\\w.@+-]+\\Z/, 'Username can contain only letters, numbers, and @/./+/-/_ characters.'),\n  'email': yup.string().required().trim().max(254, 'Email cannot be longer than 254 characters.'),\n  'password': yup.string().required().trim().min(8, 'Password must be at least 8 characters long.'),\n  'confirm_password': yup.string().required().trim()\n}).required();\n\nconst Register = () => {\n  _s();\n\n  var _errors$first_name, _errors$last_name, _errors$username, _errors$email, _errors$password, _errors$confirm_passw;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const navigate = useNavigate();\n\n  const onSubmit = data => {\n    authService.register(data).then(() => {\n      navigate('/login');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"form-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      action: \"POST\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"first_name\",\n          children: \"First name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"first_name\",\n          ...register(\"first_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), errors.first_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$first_name = errors.first_name) === null || _errors$first_name === void 0 ? void 0 : _errors$first_name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"last_name\",\n          children: \"Last name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"last_name\",\n          ...register(\"last_name\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), errors.last_name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$last_name = errors.last_name) === null || _errors$last_name === void 0 ? void 0 : _errors$last_name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ...register(\"username\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ...register(\"email\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ...register(\"password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_password\",\n          ...register(\"confirm_password\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), errors.confirm_password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: (_errors$confirm_passw = errors.confirm_password) === null || _errors$confirm_passw === void 0 ? void 0 : _errors$confirm_passw.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section submit-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"btn primary-btn\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"hvZci8bfHEyrOM2r7yZN4BE/YxQ=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useNavigate","useForm","yupResolver","yup","authService","schema","object","string","trim","max","required","matches","min","Register","register","handleSubmit","formState","errors","resolver","navigate","onSubmit","data","then","catch","err","console","log","first_name","message","last_name","username","email","password","confirm_password"],"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/Education/Projects/calendar-app/calendar-fe/src/components/Register/Register.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport authService from '../../services/authService';\n\nconst schema = yup.object({\n    'first_name': yup.string().trim().max(150, 'First name cannot be longer than 150 characters.'),\n    'last_name': yup.string().trim().max(150, 'Last name cannot be longer than 150 characters.'),\n    'username': yup.string().required().trim().max(150, 'Username cannot be longer than 150 characters.').matches(/^[\\w.@+-]+\\Z/, 'Username can contain only letters, numbers, and @/./+/-/_ characters.'),\n    'email': yup.string().required().trim().max(254, 'Email cannot be longer than 254 characters.'),\n    'password': yup.string().required().trim().min(8, 'Password must be at least 8 characters long.'),\n    'confirm_password': yup.string().required().trim()\n}).required();\n\ntype Inputs = {\n  'first_name': string,\n  'last_name': string,\n  'username': string,\n  'email': string,\n  'password': string,\n  'confirm_password': string\n};\n\nconst Register: FC = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm<Inputs>({\n        resolver: yupResolver(schema)\n      });\n    const navigate = useNavigate();\n\n    const onSubmit: SubmitHandler<Inputs> = (data) => {\n        authService.register(data)\n            .then(() => {\n               navigate('/login');\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    \n    return (\n        <section className=\"form-wrapper\">\n            <h1 className=\"title\">Register</h1>\n\n            <form className=\"form\" action=\"POST\" onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-section\">\n                    <label htmlFor=\"first_name\">First name</label>\n                    <input type=\"text\" id=\"first_name\" {...register(\"first_name\")} />\n                    {errors.first_name && <p className=\"error\">{errors.first_name?.message}</p>}\n                </div>\n\n                <div className=\"form-section\">\n                    <label htmlFor=\"last_name\">Last name</label>\n                    <input type=\"text\" id=\"last_name\" {...register(\"last_name\")} />\n                    {errors.last_name && <p className=\"error\">{errors.last_name?.message}</p>}\n                </div>\n\n                <div className=\"form-section\">\n                    <label htmlFor=\"username\">Username</label>\n                    <input type=\"text\" id=\"username\" {...register(\"username\", { required: true })} />\n                    {errors.username && <p className=\"error\">{errors.username?.message}</p>}\n                </div>\n\n                <div className=\"form-section\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" {...register(\"email\", { required: true })} />\n                    {errors.email && <p className=\"error\">{errors.email?.message}</p>}\n                </div>\n\n                <div className=\"form-section\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" {...register(\"password\", { required: true })} />\n                    {errors.password && <p className=\"error\">{errors.password?.message}</p>}\n                </div>\n\n                <div className=\"form-section\">\n                    <label htmlFor=\"confirm_password\">Confirm Password</label>\n                    <input type=\"password\" id=\"confirm_password\" {...register(\"confirm_password\", { required: true })} />\n                    {errors.confirm_password && <p className=\"error\">{errors.confirm_password?.message}</p>}\n                </div>\n\n                <div className=\"form-section submit-wrapper\">\n                    <input type=\"submit\" className=\"btn primary-btn\" value=\"Register\" />\n                </div>\n            </form>\n        </section>\n    );\n};\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module"}