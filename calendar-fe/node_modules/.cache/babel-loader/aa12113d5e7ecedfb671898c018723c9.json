{"ast":null,"code":"import { baseUrl } from '../constants';\n\nconst register = async data => {\n  const response = await fetch(`${baseUrl}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  const responseData = await response.json();\n\n  if (!response.ok) {\n    throw new Error(responseData);\n  }\n\n  return responseData;\n};\n\nconst login = async user => {\n  const response = await fetch(`${baseUrl}/auth/token`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  localStorage.setItem('token', data.access);\n  return data;\n};\n\nconst authService = {\n  register,\n  login\n};\nexport default authService;","map":{"version":3,"names":["baseUrl","register","data","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","login","user","localStorage","setItem","access","authService"],"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/Education/Projects/calendar-app/calendar-fe/src/services/authService.ts"],"sourcesContent":["import { baseUrl } from '../constants';\nimport { LoginUser, User } from '../interfaces';\n\nconst register = async (data: User) => {\n    const response = await fetch(`${baseUrl}/auth/register`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data)\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n        throw new Error(responseData);\n    }\n\n    return responseData;\n};\n\nconst login = async (user: LoginUser) => {\n    const response = await fetch(`${baseUrl}/auth/token`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n\n    const data = await response.json();\n    \n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    localStorage.setItem('token', data.access);\n    return data;\n}\n\nconst authService = { register, login };\n\nexport default authService;"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAGA,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAsB;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,gBAAZ,EAA6B;IACrDK,MAAM,EAAE,MAD6C;IAErDC,OAAO,EAAE;MACL,gBAAgB;IADX,CAF4C;IAKrDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;EAL+C,CAA7B,CAA5B;EAQA,MAAMQ,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;;EAEA,IAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUH,YAAV,CAAN;EACH;;EAED,OAAOA,YAAP;AACH,CAhBD;;AAkBA,MAAMI,KAAK,GAAG,MAAOC,IAAP,IAA2B;EACrC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,aAAZ,EAA0B;IAClDK,MAAM,EAAE,MAD0C;IAElDC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFyC;IAKlDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeM,IAAf;EAL4C,CAA1B,CAA5B;EAQA,MAAMb,IAAI,GAAG,MAAMC,QAAQ,CAACQ,IAAT,EAAnB;;EAEA,IAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;IACd,MAAM,IAAIC,KAAJ,CAAUX,IAAV,CAAN;EACH;;EAEDc,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8Bf,IAAI,CAACgB,MAAnC;EACA,OAAOhB,IAAP;AACH,CAjBD;;AAmBA,MAAMiB,WAAW,GAAG;EAAElB,QAAF;EAAYa;AAAZ,CAApB;AAEA,eAAeK,WAAf"},"metadata":{},"sourceType":"module"}